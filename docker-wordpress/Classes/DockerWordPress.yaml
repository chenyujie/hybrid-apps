#  Licensed under the Apache License, Version 2.0 (the "License"); you may
#  not use this file except in compliance with the License. You may obtain
#  a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#  License for the specific language governing permissions and limitations
#  under the License.

Namespaces:
  =: io.murano.apps.docker
  std: io.murano

Name: DockerWordPress

Extends: DockerApplication

Properties:
  name:
    Contract: $.string().notNull()
    
  mysql:
    Contract: $.class(DockerMySQL).notNull()

  publish:
    Contract: $.bool().notNull()
    Default: true


Methods:
  initialize:
    Body:
      - $._environment: $.find(std:Environment).require()
      - $._scope: switch($.publish, $ => public, not $ => internal)


  getContainer:
    Body:
      - $.mysql.deploy()
      - Return:
          name: $.name
          image: wordpress
          env: $._env2Map($.mysql)
          ports:
            - port: 80
              scope: $._scope


  onInstallationStart:
    Body:
      - $._environment.reporter.report($this, 'Installing wordpress')


  onInstallationFinish:
    Body:
      - If: $.publish
        Then:
          - $endpoints: $.applicationEndpoints.where($.scope = $this._scope).select(format('http://{0}:{1}', $.address, $.port))
          - $._environment.reporter.report($this, 'HTTPd {0} is available at {1}'.format($.name, join(', ', $endpoints)))
        Else:
          - $._environment.reporter.report($this, 'HTTPd {0} has deployed but is not accessible from outside'.format($.name))

  _env2Map:
    Arguments:
      mysql:
        Contract: $.class(DockerMySQL).notNull()
    Body:
      - $result: {}
      - $result['WORDPRESS_DB_HOST']: ('{0}:{1}'.format($mysql.applicationEndpoints[0].address, $mysql.applicationEndpoints[0].port))
      - $result['WORDPRESS_DB_USER']: root
      - $result['WORDPRESS_DB_PASSWORD']: $mysql.password
      - Return: $result
      #- For: t
      #  In: $envString.split(',')
      #  Do:
      #    - $pair: $t.split('=')
      #    - If: len($pair) < 2
      #      Then:
      #        Continue:
      #    - $key: $pair[0].trim()
      #    - $result[$key]: $pair[1].trim()
      #- Return: $result