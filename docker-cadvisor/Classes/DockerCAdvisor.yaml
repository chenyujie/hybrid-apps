Namespaces:
  =: io.murano.apps.docker
  std: io.murano

Name: DockerCAdvisor

Extends: std:Application

Properties:
  name:
    Contract: $.string().notNull()
  host:
    Contract: $.class(DockerContainerHost).notNull()
  port:
    Contract: $.int().check($ > 0 and $ < 65536)


Methods:
  initialize:
    Body:
      - $._environment: $.find(std:Environment).require()

  deploy:
    Body:
      - If: not $.getAttr(deployed, false)
        Then:
          - $._environment.reporter.report($this, 'Installing Application')
         
          - $v1 = new(DockerHostVolume, name => 'varrum', path => '/var/run')
          - $v2 = new(DockerHostVolume, name => 'varlibdocker', path => '/var/lib/docker')
          - $v3 = new(DockerHostVolume, name => 'sysfs', path => '/sys')
          
          - $volumes:
              '/var/run': new(DockerHostVolume, name => 'varrun', path => '/var/run') 
              '/var/lib/docker': new(DockerHostVolume, name => 'varlibdocker', path => '/var/lib/docker')
              '/sys': new(DockerHostVolume, name => 'sysfs', path => '/sys')
               
          - $.host.hostContainer(
                name => $.name,
                image => 'google/cadvisor',
                commands => list(),
                env => dict(),
                ports => list($.port),
                volumes => $volumes
              )
          - $.host.deploy()
          
          - $._environment.reporter.report($this, 'cAdvisor is ready')
          - $.setAttr(deployed, true)

