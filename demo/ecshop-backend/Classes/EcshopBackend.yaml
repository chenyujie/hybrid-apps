Namespaces:
  =: io.murano.apps.huawei
  res: io.murano.resources
  std: io.murano
  sys: io.murano.system

Name: EcshopBackend

Extends: std:Application

Properties:  
  name:
    Contract: $.string().notNull()

  instance:
    Contract: $.class(res:LinuxInstance).notNull()

Methods:
  initialize:
    Body:
      - $._environment: $.find(std:Environment).require()

  deploy:
    Body:
      - If: not $.getAttr(deployed, false)
        Then:
          - $._environment.reporter.report($this, 'creating backend server...')
          - $securityGroupIngress:
              - ToPort: 3306
                FromPort: 3306
                IpProtocol: tcp
                External: true
          - $._environment.securityGroupManager.addGroupIngress($securityGroupIngress)
          - $.instance.deploy()
          - $.setAttr(deployed, true)
          - $._environment.reporter.report($this, format('backend server({0}) is up and running', $.getIp()))

  getIp:
    Body:
      - Return: coalesce($.instance.floatingIpAddress, $.instance.ipAddresses[0])

  getInnerIp:
    Body:
      - Return: $.instance.ipAddresses[0]