Namespaces:
    =: io.murano
    res: io.murano.resources
    sys: io.murano.system

Name: Environment

Properties:
  name:
    Contract: $.string().notNull()

  applications:
    Contract: [$.class(Application).owned().notNull()]

  agentListener:
    Contract: $.class(sys:AgentListener)
    Usage: Runtime

  stack:
    Contract: $.class(sys:HeatStack)
    Usage: Runtime

  instanceNotifier:
    Contract: $.class(sys:InstanceNotifier)
    Usage: Runtime

  defaultNetworks:
    Contract:
      environment: $.class(res:Network)
      flat: $.class(res:Network)
    Usage: In

  securityGroupManager:
    Contract: $.class(sys:SecurityGroupManager)
    Usage: Runtime

  reporter:
    Contract: $.class(sys:StatusReporter)
    Usage: Runtime

Methods:
  initialize:
    Body:
      - $generatedEnvironmentName: $.getAttr(generatedEnvironmentName)
      - $first: false
      - If: $generatedEnvironmentName = null
        Then:
          - $first: true
          - $generatedEnvironmentName: randomName()
          - $.setAttr(generatedEnvironmentName, $generatedEnvironmentName)
      - $this.agentListener: new(sys:AgentListener, name => $generatedEnvironmentName)
      - $stackDescriptionFormat: 'This stack was generated by Murano for environment {0} (ID: {1})'
      - $this.stack: new(sys:HeatStack,
          name => $.name + '-' + $generatedEnvironmentName,
          description => $stackDescriptionFormat.format($.name, $.id()))
      - $this.instanceNotifier: new(sys:InstanceNotifier, environment => $this)
      - $this.reporter: new(sys:StatusReporter, environment => $this)
      - $net: null
      - If: $.defaultNetworks.environment != null
        Then:
          - $net: $.defaultNetworks.environment
      - If: $.defaultNetworks.flat != null
        Then:
          - $net: $.defaultNetworks.flat
      - If: $net != null and $first
        Then:
          - $this.securityGroupManager: $net.generateSecurityGroupManager($this)
          - $template:
              resources:
                $this.securityGroupManager.defaultGroupName:
                  type: 'OS::Neutron::SecurityGroup'
                  properties:
                    description: format('Composite security group of Murano environment {0}', $.name)
                    rules:
                      - port_range_min: null
                        port_range_max: null
                        protocol: icmp
                        remote_ip_prefix: '0.0.0.0/0'
          - $this.stack.updateTemplate($template)

  deploy:
    Usage: Action
    Body:
      #- $minimalStack:
      #    resources: {}
      #- $.stack.updateTemplate($minimalStack)
      #- $.stack.push()
      - $.applications.pselect($.config())
      - $.applications.pselect($.deploy())
      - $.applications.pselect($.reconfig())

  destroy:
    Body:
      - $.stack.delete()
