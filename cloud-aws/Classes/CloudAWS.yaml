Namespaces:
  =: io.murano.apps.huawei
  res: io.murano.resources
  std: io.murano
  sys: io.murano.system

Name: CloudAWS

Extends: std:Application

Properties:  
  name:
    Contract: $.string().notNull()

  region:
    Contract: $.string().notNull()
    
  cascading:
    Contract: $.class(CloudCascading).notNull()

  aws_az:
    Contract: $.string()
    
  ak:
    Contract: $.string().notNull()
    
  sk:
    Contract: $.string().notNull()

  cross_net:
    Contract: $.bool().notNull()

Methods:
  initialize:
    Body:
      - $.environment: $.find(std:Environment).require()

  deploy:
    Body:
      - If: not $.getAttr(deployed, false)
        Then:
          - $template:
              resources:
                $.name:
                  type: 'OS::Heat::Cloud'
                  properties:
                    AZName: $.name
                    CloudType: 'AWS'
                    RegionName: $.region
#                    AvailabilityZone: $.aws_az
                    AccessKey: $.ak
                    SecretKey: $.sk
                    EnableNetworkCrossClouds: $.cross_net
          - $.environment.reporter.report($this, 'Creating AWS AZ...')
          - $.environment.stack.updateTemplate($template)
          - $.setAttr(template, $template)
          - $.environment.stack.push()
          - $.setAttr(deployed, true)
      - $.environment.reporter.report($this, format('AWS AZ {0} is up and running', $.name))

  destroy:
    Body:
      - $template: $.getAttr(template, '{}')
      - $.environment.stack.excludeTemplate($template)
      - $.environment.stack.push()
